{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layouts/Default.vue?91ff","webpack:///./src/layouts/Default.vue","webpack:///./src/layouts/Default.vue?3637","webpack:///./src/App.vue","webpack:///./src/App.vue?8ecf","webpack:///./src/components/Header.vue","webpack:///./src/components/Header.vue?54b6","webpack:///./src/components/Footer.vue","webpack:///./src/components/Footer.vue?14b8","webpack:///./src/views/examples/home.vue","webpack:///./src/views/examples/home.vue?25fa","webpack:///./src/views/examples/services.vue","webpack:///./src/views/examples/services.vue?03cf","webpack:///./src/views/examples/crosschain.vue","webpack:///./src/views/examples/crosschain.vue?d3f2","webpack:///./src/views/examples/rwsbuy.vue","webpack:///./src/views/examples/rwsbuy.vue?4427","webpack:///./src/views/examples/rwssetup.vue","webpack:///./src/views/examples/rwssetup.vue?5275","webpack:///./src/views/examples/rwssetupnew.vue","webpack:///./src/views/examples/rwssetupnew.vue?d11f","webpack:///./src/views/examples/telemetry.vue","webpack:///./src/views/examples/telemetry.vue?742b","webpack:///./src/router/index.js","webpack:///./src/store.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_router_view","script","__exports__","render","store","useStore","setExpireDate","state","robonomicsUIvue","rws","active","commit","Date","getTime","onMounted","process","dispatch","watch","polkadot","address","console","log","navigation","title","links","link","type","_createBlock","_component_robo_layout_footer","version","computed","list","chains","logo","status","ref","buttonstatus","buttontext","chainfrom","chainto","amount","changeChain","transfer","setTimeout","expiredate","activateRWS","responce","saveHapass","user","userseed","passToSave","responsePass","rwsUpdateActions","save","users","addUser","add","getuserlist","removeUser","remove","option","indexOf","test","getDatalog","Promise","res","time","config","datalog","datalog2","configData","datalogData","updateTime","async","launch","timeout","JSON","parse","tx_status","stringify","now","routes","path","component","Home","CrossChain","Services","Rwsbuy","Rwssetup","Rwssetupnew","Telemetry","router","createRouter","history","createWebHashHistory","createStore","app","createApp","App","use","VueHighlightJS","robonomicsUI","mount"],"mappings":"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","file":"js/app.6b3a2078.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Default.vue?vue&type=style&index=0&id=7bcbb02f&scoped=true&lang=css\"","<template>\n    <div id=\"page\">\n        <!-- <div id=\"sidebar\">\n            <div id=\"sidebar-content\">\n                <div class=\"sidebar-title\">robonomics-ui-vue</div>\n\n                <section>\n                    <b>Examples</b>\n                    <router-link to=\"/\">Home</router-link>\n                    <router-link to=\"/telemetry\">Telemetry</router-link>\n                    <router-link to=\"/rwsactivate\">Rws Activation</router-link>\n                    <router-link to=\"/rwssetup\">Rws Setup</router-link>\n                    <router-link to=\"/rwssetupslist\">Rws Setups List</router-link>\n                    <router-link to=\"/rwsusersetup\">Rws User setup</router-link>\n                    <router-link to=\"/rwsuserslist\">Rws Users list</router-link>\n                    <router-link to=\"/hasetup\">Hass password</router-link>\n                    <router-link to=\"/services\">Services</router-link>\n                </section>\n            </div>\n        </div> -->\n        <div id=\"content\">\n            <router-view/>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n    #page {\n       display: grid;\n       /* grid-template-columns: 200px auto; */\n    }\n\n    #sidebar {\n        min-height: 100vh;\n        background: rgba(255,255,255, .2);\n        font-size: 15px;\n        line-height: 1.2;\n    }\n\n    section a, section b {\n        margin-bottom: 15px;\n    }\n\n    section {\n        margin-bottom: 30px;\n    }\n\n    #sidebar-content {\n        position: sticky;\n        top: 0;\n    }\n\n    .sidebar-title {\n        font-weight: bold;\n        padding: 10px;\n        margin-bottom: 30px;\n    }\n\n    section {\n        padding: 10px;\n    }\n\n    section:not(:last-child) {\n        margin-bottom: 30px;\n    }\n\n    section > * {\n        display: block;\n        margin-bottom: 5px;\n    }\n\n    .router-link-active {\n        color: inherit\n    }\n\n    @media screen and (max-width: 450px) {\n        #sidebar {\n            display: none;\n        }\n\n        #page {\n            grid-template-columns: auto;\n        }\n    }\n</style>\n","import { render } from \"./Default.vue?vue&type=template&id=7bcbb02f&scoped=true\"\nconst script = {}\n\nimport \"./Default.vue?vue&type=style&index=0&id=7bcbb02f&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/robonomics-ui-vue3-components-guide/robonomics-ui-vue3-components-guide/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7bcbb02f\"]])\n\nexport default __exports__","<template>\n  <Default />\n</template>\n\n<script setup>\nimport Default from \"@/layouts/Default\"\n\nimport { onMounted, watch } from 'vue'\nimport { useStore } from 'vuex'\nconst store = useStore()\n\n\nlet setExpireDate = () => {\n  if(store.state.robonomicsUIvue.rws.active) {\n    // записываем timestamp окончания подписки для подписки с владельцем active, если дата есть\n    store.commit('rws/setExpiredate', new Date('2024-01-5').getTime())\n\n    // Если подписка не находится совсем, то возращаем null\n    // store.commit('rws/setExpiredate', null)\n  }\n}\n\nonMounted( () => {\n\n  // global data for the app\n \n  store.commit('rws/setKey', process.env.VUE_APP_ROBONOMICS_UI_KEY)\n  store.dispatch('rws/init')\n  \n  store.commit('rws/setLinkActivate', '/rwsbuy')\n  store.commit('rws/setLinkSetup', '/rwssetup')\n  store.commit('rws/setLinkSetupnew', '/rwssetupnew')\n  store.commit('rws/setLinkDevices', '/telemetry')\n  store.commit('ipfs/setGateways', ['https://ipfs.io/ipfs/', 'https://ipfs.io/ipfs2/'])\n  \n  store.commit('polkadot/setBalanceXRT', 1000)\n  // Нужно обновлять это значение всегда, когда обновляется это store.state.robonomicsUIvue.polkadot.address\n  // это можно сделать так:\n  \n  watch(() => store.state.robonomicsUIvue.polkadot.address, value => {\n      // console.log лучше убрать, это я технически вставила, чтобы ошибок при сборке у меня не было\n      console.log('from app', value)\n      // получить баланс для value, то есть нового адреса и записать вот так:\n      store.commit('polkadot/setBalanceXRT', 500)\n  })\n\n  // Нужно для выбранной подписки обновить её срок\n  setExpireDate()\n  watch(() => store.state.robonomicsUIvue.rws.active , () => {\n    setExpireDate()\n  })\n\n})\n\n</script>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <robo-layout-header \n        logoIcon=\"images/logo-white.svg\"\n        :navigation=\"navigation\"\n        :title=\"props.title\"\n    />\n</template>\n\n<script setup>\nimport { defineProps } from 'vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'Robonomics Dapp'\n  }\n})\n\nconst navigation =  [\n    // {\n    //     title: 'Smart home',\n    //     links: [\n    //     {\n    //         title: 'Activation',\n    //         link: 'rwsactivate',\n    //         type: 'router'\n    //     },\n    //     {\n    //         title: 'Setups',\n    //         link: 'rwssetupslist',\n    //         type: 'router'\n    //     },\n    //     {\n    //         title: 'Users',\n    //         link: 'rwsuserslist',\n    //         type: 'router'\n    //     },\n    //     {\n    //         title: 'Devices',\n    //         link: 'telemetry',\n    //         type: 'router'\n    //     }\n    //     ]\n    // },\n\n    {\n        title: 'Other',\n        links: [\n        {\n            title: 'Services',\n            link: 'services',\n            type: 'router'\n        },\n        {\n            title: 'Crosschain',\n            link: 'cross-chain',\n            type: 'router'\n        }]\n    },\n\n    {\n        title: 'Tokenomics',\n        links: [\n        {\n            title: 'Uniswap',\n            link: 'https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n            type: 'external'\n        },\n        {\n            title: 'About XRT',\n            link: 'https://robonomics.network/xrt/',\n            type: 'external'\n        }]\n    },\n\n    {\n        title: 'Tools',\n        links: [\n        {\n            title: 'Substrate Portal',\n            link: 'https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer',\n            type: 'external'\n        },\n        {\n            title: 'Subscan',\n            link: 'https://robonomics.subscan.io/',\n            type: 'external'\n        },\n        {\n            title: 'Polkassembly',\n            link: 'https://robonomics.polkassembly.io/',\n            type: 'external'\n        }]\n    },\n\n    {\n        title: 'Kusama XCM',\n        links: [\n        {\n            title: 'Moonriver',\n            link: 'https://apps.moonbeam.network/moonriver',\n            type: 'external'\n        },\n        {\n            title: 'Solarbeam',\n            link: 'https://analytics.solarbeam.io/pairs/0x5261e0ce96289e6c3a16da45a2e52d1ab1a0e9c3',\n            type: 'external'\n        }]\n    }\n]\n\n// console.log('process.env.VUE_APP_ROBONOMICS_UI_KEY', import.meta.env.VUE_APP_ROBONOMICS_UI_KEY)\n</script>","import script from \"./Header.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Header.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <robo-layout-footer version=\"v0.5.0\" />\n</template>","import { render } from \"./Footer.vue?vue&type=template&id=5e8c0988\"\nconst script = {}\n\nimport exportComponent from \"/home/runner/work/robonomics-ui-vue3-components-guide/robonomics-ui-vue3-components-guide/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <robo-layout>\n        <dapp-header title=\"Dashboard\" />\n\n        <robo-layout-section>\n          <robo-grid offset=\"x0\" gap=\"x1\" valign=\"start\" galign=\"start\" minColumnWidth=\"550px\" maxColumnWidth=\"1fr\">\n\n                <!-- {\n                  src: 'https://static.robonomics.network/dapp/Robonomics-smart-home-intro.webm',\n                  type: 'video/webm'\n                },\n                {\n                  src: 'https://static.robonomics.network/dapp/Robonomics-smart-home-intro.mp4',\n                  type: 'video/mp4'\n                } -->\n\n\n            <robo-video \n              autoplay\n              loop\n              :sources=\"[\n                {\n                  src: 'https://crustipfs.art/ipfs/QmStCDsEHCYwVYvnDdmZBMnobPmrgZx3iJLm65b8XNzKQa',\n                  type: 'video/mp4'\n                }\n              ]\"\n              script=\"<p>Robonomics is a decentralized cloud service that can be used to enhance \n                your smart home system. It addresses two main problems: the lack of \n                control over data shared with vendors or third parties, and the vulnerability of \n                smart homes to centralized cloud server shutdowns.</p>\n                <p>With Robonomics, you can take advantage of its secure, \n                  serverless, and decentralized cloud service to improve the functionality of \n                  your smart home. Plus, you can use it with a wide range of Zigbee smart devices \n                  to automate and control various aspects of your home.</p>\n                <p>Installing Robonomics on top of Home Assistant is easy, and there are\n                   several options to choose from. Simply select the method that works best for you\n                   and your smart home on wiki.robonomics.network.</p>\"\n            />\n\n            <robo-grid-item align=\"stretch\">\n              <robo-grid offset=\"x0\" gap=\"x1\" minColumnWidth=\"270px\" maxColumnWidth=\"1fr\">\n    \n                <robo-card fixedButton>\n                  <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n                      <robo-icon icon=\"current-version\" size=\"big\" />\n                      <div>\n                        <robo-text title=\"4\">Your RWS subscriptions</robo-text>\n                      </div>\n                  </robo-grid>\n                  <robo-button :router=\"store.state.robonomicsUIvue.rws.links.list\">View details</robo-button>\n                </robo-card>\n\n                 <robo-card :pale=\"rws?.length < 1\" fixedButton>\n                  <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n                      <robo-icon icon=\"plug\" size=\"big\" />\n                      <div>\n                        <robo-text title=\"4\">Control smart devices</robo-text>\n                      </div>\n                  </robo-grid>\n                  <robo-button :router=\"store.state.robonomicsUIvue.rws.links.devices\" :disabled=\"rws?.length < 1\">Manage devices</robo-button>\n                </robo-card>\n                \n                <robo-card :pale=\"rws?.length < 1\" fixedButton>\n                  <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n                    <robo-icon icon=\"user-group\" size=\"big\" />\n                    <div>\n                      <robo-text title=\"4\">Share your telemetry</robo-text>\n                    </div>\n                  </robo-grid>\n                  <robo-button :router=\"store.state.robonomicsUIvue.rws.links.users\" :disabled=\"rws?.length < 1\">Manage Users</robo-button>\n                </robo-card>\n\n                <robo-card>\n                  <robo-text title=\"4\" offset=\"x0\">Need help?</robo-text>\n                  <robo-grid gap=\"x05\" offset=\"x1\">\n                    <robo-text size=\"small\" weight=\"bold\"><robo-link href=\"https://wiki.robonomics.network\">Wiki</robo-link> - Tutorials</robo-text>\n                    <robo-text size=\"small\" weight=\"bold\"><robo-link href=\"https://github.com/airalab/dapp.robonomics.network\">Github</robo-link> - Bugs & improvements</robo-text>\n                    <robo-text size=\"small\" weight=\"bold\"><robo-link href=\"https://discord.gg/JpaN2XAmqY\">Discord</robo-link> - Team support</robo-text>\n                  </robo-grid>\n                </robo-card>\n              </robo-grid>\n            </robo-grid-item>\n\n          </robo-grid>\n        </robo-layout-section>\n\n        <dapp-footer />\n\n    </robo-layout>\n\n</template>\n\n<script>\n  export default { name: 'Home' }\n</script>\n\n<script setup>\nimport dappHeader from '../../components/Header.vue'\nimport dappFooter from '../../components/Footer.vue'\n\nimport { computed } from 'vue'\n\n// /* + get rws */\nimport { useStore } from 'vuex'\nconst store = useStore()\n\nconst rws = computed( () => {\n  return store.state.robonomicsUIvue.rws.list\n})\n/* - get rws */\n\n</script>","import script from \"./home.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./home.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <robo-layout>\n        <dapp-header title=\"Dashboard\" />\n\n        <robo-layout-section>\n          <robo-grid offset=\"x0\" gap=\"x1\" galign=\"start\" minColumnWidth=\"350px\">\n\n            <robo-card>\n                <robo-link router=\"/telemetry\"><robo-image src=\"images/services-ha.jpg\" /></robo-link>\n                <robo-text title=\"3\"><robo-link router=\"/telemetry\">Home assistant</robo-link></robo-text>\n                <robo-text size=\"small\">Integrate Robonomics into your Home assistant dashboard and get Parachain decentralized cloud service all over the word. Manipulate your smart devices bypassing corporate clouds, manage user access wherever you are. Backup your smart home data in blockchain.</robo-text>\n            </robo-card>\n\n            <robo-card>\n                <robo-link router=\"/telemetry\"><robo-image src=\"images/services-ha.jpg\" /></robo-link>\n                <robo-text title=\"3\"><robo-link router=\"/telemetry\">Video streaming</robo-link></robo-text>\n                <robo-text size=\"small\">This Robonomics Web Service makes it possible to view your IP camera's videos saved in IPFS while outside of your network.</robo-text>\n            </robo-card>\n\n            <robo-card>\n                <robo-link href=\"https://sensors.robonomics.network/#/\"><robo-image src=\"images/services-sensors.jpg\" /></robo-link>\n                <robo-text title=\"3\"><robo-link href=\"https://sensors.robonomics.network/#/\">Sensors Map</robo-link></robo-text>\n                <robo-text size=\"small\">The decentralized opensource sensors map offers two distinct layers of decentralization at your choise: peer-to-peer connectivity for direct access to sensor data, and the federative concept for accumulating sensor data and displaying measurement history. Anyone can assemble your own sensor using components available on the free market.</robo-text>\n            </robo-card>\n\n            <robo-card>\n                <robo-link href=\"https://dapp.spot-sdk.education\"><robo-image src=\"images/services-spot.jpg\" /></robo-link>\n                <robo-text title=\"3\"><robo-link href=\"https://dapp.spot-sdk.education\">Boston Dynamics Spot SDK lessons</robo-link></robo-text>\n                <robo-text size=\"small\">Learn and practice with the Boston Dynamics Spot robot wherever you are. After each lesson you will receive a captured video of the robot movements and a printable PDF certificate.</robo-text>\n            </robo-card>\n\n            <robo-card>\n                <robo-link href=\"https://telescope.merklebot.com/#/\"><robo-image src=\"images/services-telescope.jpg\" /></robo-link>\n                <robo-text title=\"3\"><robo-link href=\"https://telescope.merklebot.com/#/\">An Autonomous Telescope Minting RMRK NFT's</robo-link></robo-text>\n                <robo-text size=\"small\">Connect to an autonomous telescope in the dark night of the Atacama desert in Chile to capture an astronomical object and mint unique NFTs in a few clicks.</robo-text>\n            </robo-card>\n\n            <robo-card>\n                <robo-link href=\"https://dapp.ipci.io/#/offsetting\"><robo-image src=\"images/services-offsetting.jpg\" /></robo-link>\n                <robo-text title=\"3\"><robo-link href=\"https://dapp.ipci.io/#/offsetting\">Smart Building Offsetting</robo-link></robo-text>\n                <robo-text size=\"small\">Carbon footprint clearance for smart buildings based on geolocation and energy consumption information.</robo-text>\n            </robo-card>\n\n          </robo-grid>\n        </robo-layout-section>\n\n    </robo-layout>\n\n</template>\n\n<script>\n  export default { name: 'Services' }\n</script>\n\n<script setup>\nimport dappHeader from '../../components/Header.vue'\n\n</script>","import script from \"./services.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./services.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <robo-layout>\n        <dapp-header title=\"Cross-chain\" />\n\n        <robo-layout-section>\n          <robo-section offset=\"x0\" width=\"narrow\">\n         \n              <robo-text title=\"2\">Cross-chain for XRT</robo-text>\n\n              <robo-grid offset=\"x0\" gap=\"x1\" columns=\"1\">\n                <robo-account-polkadot\n                    extensionAllowShift\n                    extensionShowIcon\n                    selectable\n                    selectstyle\n                    selectblock\n                />\n\n                <robo-card>\n                  \n                    <robo-grid offset=\"x0\" gap=\"x1\" columns=\"minmax(100px, 1fr) auto minmax(100px, 1fr)\">\n                      <robo-grid offset=\"x0\" gap=\"x0\" columns=\"1\">\n                        <robo-text size=\"small\">From:</robo-text>\n                        <robo-grid type=\"flex\" offset=\"x0\" gap=\"x05\" galign=\"start\">\n                          <robo-image min=\"32px\" max=\"32px\" :src=\"chains[chainfrom].logo\" />\n                          <robo-text>{{chains[chainfrom].name}}</robo-text>\n                        </robo-grid>\n                      </robo-grid>\n\n                      <robo-grid offset=\"x0\" gap=\"x0\" columns=\"1\">\n                        <div></div>\n                        <robo-button @click.prevent=\"changeChain()\" clean size=\"large\"><robo-icon icon=\"right-left\"/></robo-button>\n                      </robo-grid>\n\n                      <robo-grid offset=\"x0\" gap=\"x0\" columns=\"1\" galign=\"right\">\n                        <robo-text size=\"small\">To:</robo-text>\n                        <robo-grid type=\"flex\" offset=\"x0\" gap=\"x05\" galign=\"start\">\n                          <robo-image min=\"32px\" max=\"32px\" :src=\"chains[chainto].logo\" />\n                          <robo-text>{{chains[chainto].name}}</robo-text>\n                        </robo-grid>\n\n                      </robo-grid>\n                    </robo-grid>\n\n                </robo-card>\n\n                <robo-grid offset=\"x0\" gap=\"x05\">\n                  <robo-input label=\"Select amount of XRT\" type=\"number\" required :disabled=\"status === 'processing'\" v-model=\"amount\"/>\n                  <robo-input label=\"Transfer to address\" type=\"text\" required :disabled=\"status === 'processing'\" v-model=\"address\"/>\n                </robo-grid>\n\n                <robo-button \n                    @click.prevent=\"transfer()\"\n                    :disabled=\"status === 'processing'\"\n                    :loading=\"status === 'processing'\"\n                    :type=\"buttonstatus\"\n                    block\n                >\n                {{buttontext}}\n                </robo-button>\n\n              </robo-grid>\n\n  \n          </robo-section>\n        </robo-layout-section>\n\n        <dapp-footer />\n\n    </robo-layout>\n\n</template>\n\n<script>\n  export default { name: 'CrossChain' }\n</script>\n\n<script setup>\nimport { ref } from 'vue'\n\nimport dappHeader from '../../components/Header.vue'\nimport dappFooter from '../../components/Footer.vue'\n\nconst chains = [\n  {\n    name: 'Robonomics',\n    logo: 'images/chain-robonomics.svg'\n  },\n  {\n    name: 'Basilisk',\n    logo: 'images/chain-basilisk.svg'\n  }\n]\n\nlet status = ref('static')\nlet buttonstatus = ref('primary')\nlet buttontext = ref('Submit')\nlet chainfrom = ref(0)\nlet chainto = ref(1)\nlet amount = ref(null)\nlet address = ref(null)\n\nlet changeChain = () => {\n  const shift = chainto.value\n  chainto.value = chainfrom.value\n  chainfrom.value = shift\n}\n\nlet transfer = () => {\n  status.value = 'processing'\n  buttonstatus.value = 'na'\n  buttontext.value = 'loading'\n  \n  setTimeout(() => {\n    status.value = 'static'\n    buttonstatus.value = 'ok'\n    buttontext.value = 'Transferred'\n\n    // buttonstatus.value = 'error'\n    // buttontext.value = 'Some error ocured'\n  }, '2000')\n\n  setTimeout(() => {\n    buttonstatus.value = 'primary'\n    buttontext.value = 'Submit'\n  }, '4000')\n}\n</script>","import script from \"./crosschain.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./crosschain.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <robo-layout>\n        <dapp-header title=\"Buy RWS subscription\" />\n\n        <robo-layout-section>\n          <robo-template-rws-buy \n            price=\"1.0000001\"\n            activationtime=\"2\"\n            available=\"7\"\n\n            :rwsExpiration=\"expiredate\"\n            @on-activate=\"activateRWS\"\n          />\n        </robo-layout-section>\n\n    </robo-layout>\n\n</template>\n\n<script>\n  export default { name: 'ExampleRwsbuy' }\n</script>\n\n<script setup>\nimport { onMounted, watch, ref } from 'vue'\nimport dappHeader from '../../components/Header.vue'\nimport { useStore } from 'vuex'\nconst store = useStore()\n\nconst expiredate = ref(null)\n\nonMounted( () => {\n  \n  /*\n  При загрузке надо проверить есть ли подписка для подключенного адреса (store.state.robonomicsUIvue.polkadot.address)\n  Если подписка есть (даже просроченная), то надо в библиотеку передать дату в prop rwsExpiration. Если подписки нет, передавай null \n  */\n\n  expiredate.value = new Date('2024-02-05').getTime()\n\n  /*\n  Если подключенный полкадот адрес меняется, то надо опять промерить для этого адреса подписку и так же передать в prop rwsExpiration\n  */\n\n  watch( () => store.state.robonomicsUIvue.polkadot.address, () => {\n    expiredate.value = null\n    // ну или дата окончания подписки для этого адреса\n  })\n})\n\nlet activateRWS = (responce) => {\n\n  /*\n  При активации подписки, пробуем активировать её для подключенного адреса;\n  результат передаем с помощью функции responce(status, message)\n  status - 'ok' или 'error'\n  message - не обязательное поле, лучше только при ошибке что-то существенное писать, что поможет человеку понять что не так\n\n  setTimeout здесь у меня для визуальной задержки. Если этот процесс сам по себе не быстрый, setTimeout можно убрать\n\n  Потом если активация подписки прошла успешно, то надо передать в библиотеку дату таким образом: store.commit('rws/setExpiredate', дата окончания подписки) \n  */\n\n  setTimeout(() => {\n    responce('ok')\n    // store.commit('rws/setExpiredate', new Date('2024-02-05').getTime())\n  }, 1000)\n}\n\n</script>","import script from \"./rwsbuy.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./rwsbuy.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout>\n      <dapp-header title=\"RWS setup\" />\n\n      <robo-layout-section>\n\n        <robo-template-rws-setup\n          :onRwsUpdate=\"rwsUpdateActions\"\n          @request-users = \"giveusers\"\n          :onUserDelete=\"removeUser\"\n          :onUserAdd=\"addUser\"\n          :onSaveHapass=\"saveHapass\"\n        />\n\n      </robo-layout-section>\n\n      <dapp-footer />\n  </robo-layout>\n\n</template>\n\n<script>\n  export default { name: 'ExampleRwssetup' }\n</script>\n\n<script setup>\nimport dappHeader from '../../components/Header.vue'\nimport dappFooter from '../../components/Footer.vue'\nimport { onMounted, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\nconst store = useStore()\n\nlet saveHapass = (user, userseed, passToSave, responsePass) => {\n  /*\n    сохранение пароля\n\n    нужно сначала проверить user, userseed - есть ли в подписке и тп\n    если не все в порядке, возвращай responsePass('error') и можно еще добавить в чем проблема в качестве сообщения \n\n    USAGE: responsePass(status, message)\n    status = 'ok' если пароль для текущего 'user' записался\n    status = 'error' если пароль не записался\n    message не обязательно\n  */\n\n  setTimeout(() => {\n    responsePass('ok')\n    // responsePass('error', 'something went wrong during saving')\n  }, 1000)\n}\n\nlet rwsUpdateActions = (rws, save) => {\n\n  /* Usage:\n\n  1) Check and save in chain some data from `rws`, if needed\n\n  2) Use `save` function with attributes for passing result to lib's component\n  save(status, message)\n  status может быть 'ok', 'error'\n  message любая строка */\n\n  console.log('rws', rws)\n\n  save('ok')\n  // save('error', 'Что-то не записалось')\n}\n\n\n\nconst users = ref(null)\n\nlet addUser = (user, add) => {\n\n  /*\n  Добавление пользователя.\n\n  setTimeout - я установила себе для тестов, \n  но если есть вероятность, что действие будет происходить моментально, то надо оставить где-то 1000, \n  чтобы пользователю был виден лоадер\n  \n  add(status, message)\n  status - результат действия, 'ok' (пользователь добавлен) или 'error' (пользователь не добавлен)\n  message - сообщение, необязательно. Имеет смысл толкьо что-то передавать при ошибке, если есть что сказать.\n  */\n\n  setTimeout(() => {\n\n    /* <тут какие-то действия по добавлению пользователя в подписку> */\n\n    add('ok')\n\n    //  у тебя это будет просто та же функция получения юзеров для активной подписки, я тут искусственно добавляю юзера в массив на уровне приложения для теста\n    getuserlist('add', user)\n  }, 3000)\n}\n\n\nlet removeUser = (user, remove) => {\n  /*\n  Удаление пользователя.\n\n  setTimeout - я установила себе для тестов, \n  но если есть вероятность, что действие будет происходить моментально, то надо оставить где-то 1000, \n  чтобы пользователю был виден лоадер\n  \n  remove(status, message)\n  status - результат действия, 'ok' (пользователь удален) или 'error' (пользователь не удален)\n  message - сообщение, необязательно. Имеет смысл толкьо что-то передавать при ошибке, если есть что сказать.\n  */\n\n  setTimeout(() => {\n\n    /* <тут какие-то действия по удалению пользователя в подписке> */\n    \n    remove('ok')\n\n    //  у тебя это будет просто та же функция получения юзеров для активной подписки, я тут искусственно удаляю юзера из массива на уровне приложения для теста\n    getuserlist('delete', user)\n  }, 3000)\n}\n\nlet getuserlist = (option, user) => {\n  /* \n  получаем список юзеров и записываем его в дапп\n  setTimeout тут для имитации задержки сети (мне для тестов, в дапп не нужно переносить)\n\n  option, user - это мне для тестов, чтобы имитировать добавление и удаление\n  */\n\n  if(store.state.robonomicsUIvue.rws.active) { \n    setTimeout( () => {\n\n      if(option === 'init') {\n        users.value = ['4Hd8jjS7MV5trMfPLok3KvpNTHt8frNwTb3ky6RwFzzXVQd7', '4Hd9ahv9X7528S5har385fqyUFSLbNZ2scg7x6ZWEA9e9EBV']\n      }\n\n      if(option === 'add') {\n        users.value.push(user)\n      }\n\n      if(option === 'delete') {\n        const i = users.value.indexOf(user)\n        if( i >= 0 ) {\n          users.value.splice(i, 1)\n        }\n      }\n\n      store.commit('rws/setUsers', users.value)\n    }, 2000)\n  }\n}\n\nonMounted( () => {\n\n  getuserlist('init')\n\n  /* Ещё раз обновляем список юзеров, если сменилась активная подписка */\n  watch( store.state.robonomicsUIvue.rws.active, () => {\n    getuserlist('init')\n  })\n\n})\n\n\n</script>","import script from \"./rwssetup.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./rwssetup.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout>\n      <dapp-header title=\"New RWS setup\" />\n      <robo-layout-section>\n\n        <robo-template-rws-setup create :onRwsUpdate=\"test\" />\n        \n      </robo-layout-section>\n\n      <dapp-footer />\n  </robo-layout>\n\n</template>\n\n<script>\n  export default { name: 'ExampleRwssetup' }\n</script>\n\n<script setup>\nimport dappHeader from '../../components/Header.vue'\nimport dappFooter from '../../components/Footer.vue'\n\nlet test = (rws, save) => {\n  /* Usage:\n\n  1) Check and save in chain some data from `rws`, if needed\n\n  2) Use `save` function with attributes for passing result to lib's component\n  save(status, message)\n  status может быть 'ok', 'error'\n  message любая строка */\n\n  console.log('rws', rws)\n  save('ok', 'ПРИВЕТ')\n  // save('error', 'Что-то не записалось')\n}\n</script>","import script from \"./rwssetupnew.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./rwssetupnew.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <robo-layout>\n        <dapp-header title=\"Smart devices\" />\n\n        <robo-template-devices-layout \n          :datalog=\"datalogData\"\n          :config=\"configData\"\n          :updateTime=\"updateTime\"\n        />\n\n    </robo-layout>\n\n</template>\n\n<script>\n  export default { name: 'ExampleTelemetry' }\n</script>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport datalog from '../../data/shtab2/telemetry.json'\nimport datalog2 from '../../data/shtab2/telemetry2.json'\nimport config from '../../data/shtab2/config.json'\n\n// import datalog from '../../data/shtab/telemetry.json'\n// import datalog2 from '../../data/shtab/telemetry.json'\n// import config from '../../data/shtab/config.json'\n\nimport dappHeader from '../../components/Header.vue'\n\n// let onUpdateTest = updateStatus => {\n//   console.log('onUpdateTest')\n//   updateStatus('ok', Date.now())\n//   // updateStatus('error')\n// }\n\n/* + test async */\n// функция для эмуляции задержки загрузки данных из чейна\nlet getDatalog = (type) => {\n  return new Promise(res => {\n    let time = 500;\n    if (type === \"config\") {\n      time = 1000;\n    }\n    setTimeout(() => {\n      if (type === \"config\") {\n        res(config);\n      } else if (type === \"telemetry\") {\n        res(datalog);\n      } else {\n        res(datalog2);\n      }\n    }, time);\n  });\n}\n\nconst configData = ref(null)\nconst datalogData = ref(null)\nconst updateTime = ref(null)\n/* - test async */\n\n/* + get launch command */\nimport { useStore } from 'vuex'\nconst store = useStore()\n\nonMounted( async () => {\n\n    watch(() => store.state.robonomicsUIvue.rws.launch, value => {\n\n      // пример обновления статус бара (сообщение будет показываться все время пока не перебьется новым, так как timeout: null)\n      store.dispatch('app/setStatus', {value: 'Launch initiated', timeout: null})\n\n      // обновление статуса для лаунч, тест\n      // возможные статусы для транзации: 'pending', 'approved', 'declined', 'success', 'error'\n      console.log('LAUNCH', value)\n      const o = JSON.parse(value)\n      \n      if(o['tx'].tx_status === 'pending'){\n        setTimeout(() => {\n          o['tx'].tx_status = 'approved'\n          store.commit('rws/setLaunch', JSON.stringify(o))\n        }, 1000)\n\n        setTimeout(() => {\n          o['tx'].tx_status = 'declined'\n          store.commit('rws/setLaunch', JSON.stringify(o))\n        }, 3000)\n\n        setTimeout(() => {\n          o['tx'].tx_status = 'success'\n          store.commit('rws/setLaunch', JSON.stringify(o))\n        }, 6000)\n\n        setTimeout(() => {\n          o['tx'].tx_status = 'error'\n          store.commit('rws/setLaunch', JSON.stringify(o))\n        }, 9000)\n\n        setTimeout(() => {\n          o['tx'].tx_status = 'none'\n          store.commit('rws/setLaunch', JSON.stringify(o))\n        }, 12000)\n\n      }\n    })\n\n    /* + test async */\n    // первая загрузка данных\n    configData.value = await getDatalog(\"config\")\n    datalogData.value = await getDatalog(\"telemetry\")\n    updateTime.value = Date.now()\n    store.dispatch('app/setStatus', {value: 'Config & telemetry loaded', timeout: 3000})\n\n    // обновление данных телеметрии\n    setTimeout(async () => {\n      datalogData.value = await getDatalog(\"telemetry2\")\n      updateTime.value = Date.now()\n      store.dispatch('app/setStatus', {value: 'Config & telemetry updated', timeout: 3000})\n\n    }, 4000)\n    \n    /* - test async */\n})\n/* - get launch command */\n</script>","import script from \"./telemetry.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./telemetry.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHashHistory } from 'vue-router'\nimport Home from '../views/examples/home.vue'\nimport Services from '../views/examples/services.vue'\nimport CrossChain from '../views/examples/crosschain.vue'\nimport Rwsbuy from '../views/examples/rwsbuy.vue'\nimport Rwssetup from '../views/examples/rwssetup.vue'\nimport Rwssetupnew from '../views/examples/rwssetupnew.vue'\nimport Telemetry from '../views/examples/telemetry.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'ExampleHome',\n    component: Home\n  },\n  {\n    path: '/cross-chain',\n    name: 'ExampleCrossChain',\n    component: CrossChain\n  },\n  {\n    path: '/services',\n    name: 'ExampleServices',\n    component: Services\n  },\n\n  {\n    path: '/rwsbuy',\n    name: 'ExampleRwsbuy',\n    component: Rwsbuy\n  },\n\n  {\n    path: '/rwssetup',\n    name: 'ExampleRwssetup',\n    component: Rwssetup\n  },\n\n  {\n    path: '/rwssetupnew',\n    name: 'ExampleRwssetupnew',\n    component: Rwssetupnew\n  },\n\n  {\n    path: '/telemetry',\n    name: 'ExampleTelemetry',\n    component: Telemetry\n  },\n\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { createStore } from \"vuex\" \n\nconst store = createStore({\n   state:{\n      name: \"Vue\"\n   }\n})\n\nexport default store","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from \"./store\"\n\nimport VueHighlightJS from 'vue3-highlightjs'\nimport 'highlight.js/styles/stackoverflow-light.css'\n\nimport { robonomicsUI } from 'robonomics-ui-vue'\nimport 'robonomics-ui-vue/style.css'\n\nconst app = createApp(App)\n\napp\n    .use(router)\n    .use(store)\n    .use(VueHighlightJS)\n    .use(robonomicsUI, { store })\n    // .use(robonomicsUI, { store, key: process.env.VUE_APP_ROBONOMICS_UI_KEY })\n\napp.mount('#app')\n\n"],"sourceRoot":""}